name: Deploy Spring Boot App to EC2 using CodeDeploy

on:
  push:
    branches: [ main ]

jobs:
  # -------------------------------------
  # ✅ Step 1: Run Super-Linter
  # -------------------------------------
  lint:
    name: Super-Linter Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Pre-pull Super-Linter image
        run: docker pull github/super-linter:slim-v5

      - name: Run Super-Linter
        uses: github/super-linter/slim@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main

  # -------------------------------------
  # ✅ Step 2: Wait for Manual Approval
  # -------------------------------------
  approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: lint
    environment:
      name: production   # Requires manual approval in GitHub UI
    steps:
      - name: Approval Step
        run: echo "Manual approval completed. Proceeding with deployment."

  # -------------------------------------
  # ✅ Step 3: Build & Deploy to EC2
  # -------------------------------------
  deploy:
    name: Build and Deploy to EC2
    runs-on: ubuntu-latest
    needs: approval

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package
        working-directory: spring-boot-hello-world-example

      - name: Zip Deployment Package
        run: |
            mkdir -p build
            cp spring-boot-hello-world-example/target/*.jar build/
            cp -r aws/scripts build/scripts
            cp appspec.yml build/
            cd build && zip -r spring-boot-app.zip *

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Upload to S3
        run: aws s3 cp build/spring-boot-app.zip s3://destination-bucket-modi68/spring-boot-app.zip

      - name: Deploy to EC2 via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name demo-app-name \
            --deployment-group-name demo-deploy-group \
            --s3-location bucket=destination-bucket-modi68,bundleType=zip,key=spring-boot-app.zip \
            --region ap-south-1
